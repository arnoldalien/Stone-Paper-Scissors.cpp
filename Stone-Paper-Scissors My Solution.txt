
#include <iostream>
#include <string>
#include <cstdlib>
#include <ctime>

enum enGame { Stone = 1, Paper = 2, Scissors = 3 };

using namespace std;

int ReadPositiveNumber(string Message)
{
	int Number = 0;
	do
	{
		cout << Message;
		cin >> Number;
	} while (Number <= 0 || Number > 3);
	return Number;
}

int RandomNumber(int From, int To)
{
	int randNum = rand() % (To - From + 1) + From;

	return randNum;
}

struct stRounds
{
	short Round = 0;
};

enum enRoundResult {
	PlayerWin,
	ComputerWin,
	Draw
};
struct stResults
{
	short PlayerWon = 0;
	short ComputerWon = 0;
	short DrawTimes = 0;
	short FinalWinner = 0;
};

short ReadHowManyRound(stRounds& GameRound)
{

	do
	{
		cout << "How Many Rounds 1 to 10 ?" << endl;
		cin >> GameRound.Round;
	} while (GameRound.Round > 10 || GameRound.Round < 1);
	return GameRound.Round;
}

string GameChoice(short Choice)
{
	switch (Choice)
	{
	case 1: return "Stone";
	case 2: return "Paper";
	case 3: return "Scissors";
	default: return "Unknown";
	}
}

enRoundResult checkStronger(short user, short computer) {
	if (user == computer) return Draw;

	if ((user == 1 && computer == 3) ||
		(user == 2 && computer == 1) ||
		(user == 3 && computer == 2))
		return PlayerWin;

	return ComputerWin;
}

void PrintGameOverScreen(stRounds& Round, stResults& Final)
{
	cout << "\a";
	cout << "\t\t\t________________________________________________" << endl << endl;
	cout << "\t\t\t               +++ Game Over +++              " << endl;
	cout << "\t\t\t________________________________________________" << endl;
	cout << "\n\t\t\t                [ Game Results ]               " << endl;
	cout << "\t\t\t________________________________________________" << endl << endl;

	cout << "\t\t\tGame Rounds         : " << Round.Round << endl;
	cout << "\t\t\tPlayer1 won times   : " << Final.PlayerWon << endl;
	cout << "\t\t\tComputer won times  : " << Final.ComputerWon << endl;
	cout << "\t\t\tDraw times          : " << Final.DrawTimes << endl;
	string Winner = "";

	switch (Final.FinalWinner)
	{
	case 1: Winner = "Player";
		system("Color 2F");
		break;
	case 2: Winner = "Computer";
		system("Color 4F");
		break;
	default: Winner = "No Winner";
		system("Color 6F");
		break;
	}
	cout << "\t\t\tFinal Winner        : " << Winner << endl << endl;
	cout << "\t\t\t________________________________________________" << endl;
}

void PlayGame()
{
	stResults Results;
	stRounds Round;

	short PlayerChoice = 0, ComputerChoice = 0;

	ReadHowManyRound(Round);

	for (int i = 1; i <= Round.Round; i++)
	{

		cout << "\nRound [" << i << "] begins:" << endl << endl;
	
		PlayerChoice = ReadPositiveNumber("Your Choice: [1]:Stone, [2]:Paper, [3]:Scissors ? ");

		ComputerChoice = RandomNumber(1, 3);

		enRoundResult Result = checkStronger(PlayerChoice, ComputerChoice);

		cout << "\n--------------- Round [" << i << "] ---------------" << endl << endl;
		cout << "Player1 Choice : " << GameChoice(PlayerChoice) << endl;
		cout << "Computer Choice: " << GameChoice(ComputerChoice) << endl;
		cout << "Round Winner   : ";

		switch (Result)
		{
		case PlayerWin:
			system("Color 2F");
			cout << "[Player]" << endl;
			Results.PlayerWon++;
			break;
		case ComputerWin:
			system("Color 4F");
			cout << "\a";
			cout << "[Computer]" << endl;
			Results.ComputerWon++;
			break;
		case Draw:
			system("Color 6F");
			cout << "[No Winner]" << endl;
			Results.DrawTimes++;
			break;
		}
		cout << "-----------------------------------------" << endl;
	}

	if (Results.PlayerWon > Results.ComputerWon)
		Results.FinalWinner = 1;
	else if (Results.ComputerWon > Results.PlayerWon)
		Results.FinalWinner = 2;
	else
		Results.FinalWinner = 0;

	cout << endl;
	PrintGameOverScreen(Round, Results);
}

int main()
{
	srand((unsigned)time(NULL));

	string again = "";

	do
	{
		system("cls");
		system("Color 07");
		PlayGame();

		cout << "\n\t\t\tDo You Want To Play Again? Y/N? ";
		cin >> again;

	} while (again == "Y" || again == "y");

	return 0;
}